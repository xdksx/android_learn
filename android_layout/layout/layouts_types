１、介绍：布局中也可以带布局，也可以带控件，控件中不能带布局
２、分类：四种
１）线性布局：LinearLayout 这个布局是将它所包含的控件在线性方向上依次排序，有垂直方向上的线性排列，还有水平方向的排列
eg:
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:orientation="vertical" //垂直排列
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <Button
        android:id="@+id/button_1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Button 1"/>   
    <Button 
        android:id="@+id/button_4"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
		android:text="Button 4"/>
	<Button 
        android:id="@+id/button_5"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
		android:text="Button 5"/>
    
   <Button
        android:id="@+id/button_6"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Button 6"/>

</LinearLayout>
  android:orientation="horizontal" //水平排列
  
Ａ、 android:layout_gravity属性：是指控件在布局中的对齐方式；
 在当android:orientation="horizontal时，　可以决定控件在垂直方向的位置：
 如
  <Button
        android:id="@+id/button_1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="top"
        android:text="Button 1"/>   
    <Button 
        android:id="@+id/button_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center_vertical"
		android:text="Button 4"/>
	<Button 
        android:id="@+id/button_5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="bottom"
		android:text="Button 5"/>
		
　　button 1
 
 
          button 4
             
                  
                  button 5
     同理  在vertical垂直排列时，则在水平方向上可以进行，
     button 1
                 button 4
                                   button5
B、android:layout_weight属性，允许设置控件占据的比例，从而设置它的大小
   会把所有的layout_weight值相加作为分母，控件的该值作为分母就可以知道大小　如
     <EditText
        android:id="@+id/input_message"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:hint="type here some"/>
    <Button
        android:id="@+id/button_1"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:text="Button 1"/>   
                  
            
 
２）相对布局　RelativeLayout
可以通过相对定位的方式让控件出现在布局的任何位置，它的属性很多
如:相对于父元素定位，所以满整个屏幕
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <Button 
        android:id="@+id/button_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
		android:text="Button 4"/>
	<Button 
        android:id="@+id/button_5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentRight="true"
        android:layout_alignParentTop="true"
		android:text="Button 5"/>
	
	<Button 
        android:id="@+id/button_6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
		android:text="Button 6"/>
    
    <Button
        android:id="@+id/button_1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_alignParentLeft="true"
        android:text="Button 1"/>   
        
     <Button
        android:id="@+id/button_8"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:layout_alignParentRight="true"
        android:text="Button 8"/>   
        

</RelativeLayout>
如：相对于控件定位，所以只是占据部分屏幕
<Button 
        android:id="@+id/button_6"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
		android:text="Button 6"/>
    <Button 
        android:id="@+id/button_4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@id/button_6"
        android:layout_toLeftOf="@id/button_6"
		android:text="Button 4"/>
	<Button 
        android:id="@+id/button_5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@id/button_6"
        android:layout_toRightOf="@id/button_6"
		android:text="Button 5"/>

    
    <Button
        android:id="@+id/button_1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/button_6"
        android:layout_toRightOf="@id/button_6"
        android:text="Button 1"/>   
        
     <Button
        android:id="@+id/button_8"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/button_6"
        android:layout_toLeftOf="@id/button_6"
        android:text="Button 8"/>   
        
  ３）帧布局　FrameLayout,这种布局没有方便的定位方式，它的所有控件都会默认摆放在布局的左上角
 　如
  <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    	
    <TextView
      android:id="@+id/text_view"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:text="this is a textview"
      />
     <ImageView
       android:id="@+id/image_view"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:src="@mipmap/ic_launcher"
       />
       
 </FrameLayout>
如，加入gravity ,让其显示不重叠
   <TextView
      android:id="@+id/text_view"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_gravity="left"
      android:text="this is a textview"
      />
     <ImageView
       android:id="@+id/image_view"
       android:layout_width="wrap_content"
       android:layout_height="wrap_content"
       android:layout_gravity="right"
       android:src="@mipmap/ic_launcher"
       />
 
４）百分比布局 允许直接指定控件在布局中所占的百分比，由于LinearLayout本身已经支持按照比例指定控件的大小，故
　　百分比布局在另外两种的基础上进行：PercentFrameLayout和PercentRelativeLayout
  这两个布局定义在support库中，需要在build.gradle中进行定义添加
   compile 'com.android.support:percent:24.2.1'

  
       <?xml version="1.0" encoding="utf-8"?>
<android.support.percent.PercentFrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    	
  <Button 
        android:id="@+id/button_4"
        app:layout_widthPercent="50%"
        app:layout_heightPercent="50%"
        android:layout_gravity="left|top"
		android:text="Button 4"/>
	<Button 
        android:id="@+id/button_5"
        app:layout_widthPercent="50%"
        app:layout_heightPercent="50%"
        android:layout_gravity="right|top"
		android:text="Button 5"/>
    
   <Button 
        android:id="@+id/button_6"
        app:layout_widthPercent="50%"
        app:layout_heightPercent="50%"
        android:layout_gravity="left|bottom"
		android:text="Button 6"/>
	 <Button 
        android:id="@+id/button_7"
        app:layout_widthPercent="50%"
        app:layout_heightPercent="50%"
        android:layout_gravity="right|bottom"
		android:text="Button 7"/>
        
 </android.support.percent.PercentFrameLayout> 

５）此外还有AbsolutedLayout 和TableLayout等布局。用的少，
