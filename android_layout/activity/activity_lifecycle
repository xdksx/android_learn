
关于活动的生命周期和活动被销毁时保存数据　onSaveInstanceState

1)活动的生命周期
从一个简单的例子来看：

只贴出关键代码，是两个按钮分别在点击时启动两个活动

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

public class MainActivity extends AppCompatActivity {

    public static final String TAG = "MainActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        Log.d(TAG, "onCreate");
        setContentView(R.layout.activity_main);
        Button startNormalActivity = (Button) findViewById(R.id.start_normal_activity);
        Button startDialogActivity = (Button) findViewById(R.id.start_dialog_activity);
        startNormalActivity.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this, NormalActivity.class);
                startActivity(intent);
            }
        });
        startDialogActivity.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this, DialogActivity.class);
                startActivity(intent);
            }
        });
    }

    @Override
    protected void onStart() {
        super.onStart();
        Log.d(TAG, "onStart");
    }

    @Override
    protected void onResume() {
        super.onResume();
        Log.d(TAG, "onResume");
    }

    @Override
    protected void onPause() {
        super.onPause();
        Log.d(TAG, "onPause");
    }

    @Override
    protected void onStop() {
        super.onStop();
        Log.d(TAG, "onStop");
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        Log.d(TAG, "onDestroy");
    }

    @Override
    protected void onRestart() {
        super.onRestart();
        Log.d(TAG, "onRestart");
    }

}

分析行为：
主活动：打开　omCreate onStart onResume显示
　　　　　　  点击打开normal活动　　onPause onStop 
        返回　　　　　onRestart onStart onResume 
        点击打开Dialog  onPause   由于对话框未完全覆盖主活动故未onStop 
        点击返回　onResume
        返回到home或在主活动返回　　onPause onStop onDestory
  
normal活动：　点击按钮：onCreate onStart onResume 
            返回到主活动:onpause onStop onDestory
            
            
Dialog: 同上
见第一行代码的图非常清晰，主要记住那张图就可以了


异常退出时为了保存数据，需要调用
@Override 
    protected void onSaceInstanceState(Bundle outState){
		super.onSaceInstanceState(outState);
		String tempData="some thing you justed typed";
		outState.putString("data_key",tempData);
	}
	将数据保存起来
	并在oncreate 中
	   if (savedInstanceState!=null)
        {
			String tmp=savedInstanceState.getString("data_key");
			Log.d(TAG,tmp);
		}
